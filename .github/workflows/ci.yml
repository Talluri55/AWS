name: CI - Build and Push to ECR

on:
  push:
    branches:
      - master   # or main, check your repo default branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Run Unit Tests (Node.js example)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies & run tests
        run: |
          npm install
          npm test

      - name: Debug Secrets
        run: |
          echo "AWS_ACCESS_KEY_ID = ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY length =" $(echo -n "${{ secrets.AWS_SECRET_ACCESS_KEY }}" | wc -c)
          echo "AWS_REGION = ${{ secrets.AWS_REGION }}"

          
      # 3. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 4. Login to Amazon ECR
      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 5. Build & Push Docker Image
      - name: Build, Tag, and Push
        run: |
          IMAGE_TAG=${GITHUB_SHA}
          ECR_REGISTRY=${{ steps.ecr.outputs.registry }}
          ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}

          echo "Building image $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
