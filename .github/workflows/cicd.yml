name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Login to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # --------------------
      # Build & Push Web Server
      # --------------------
      - name: Install web-server dependencies
        working-directory: ./web-server
        run: npm install

      - name: Build & Push Web Server image
        run: |
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY=test-web-app
          IMAGE_TAG=latest
          SHA_TAG=${{ github.sha }}

          echo "Building Web Server image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHA_TAG ./web-server
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SHA_TAG

      # --------------------
      # Build & Push App Server
      # --------------------
      - name: Install app-server dependencies
        working-directory: ./app-server
        run: npm install

      - name: Build & Push App Server image
        run: |
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY=test-app-server
          IMAGE_TAG=latest
          SHA_TAG=${{ github.sha }}

          echo "Building App Server image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHA_TAG ./App-server
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SHA_TAG

      # --------------------
      # Deploy to EKS
      # --------------------
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name test-cluster

      - name: Deploy manifests
        run: |
          kubectl apply -f web-server/k8s/web-deployment.yaml
          kubectl apply -f web-server/k8s/web-service.yaml
          kubectl apply -f app-server/k8s/app-deployment.yaml
          kubectl apply -f app-server/k8s/app-service.yaml
