name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies (Web Server)
        working-directory: ./web-server
        run: npm install

      - name: Run tests (Web Server)
        working-directory: ./web-server
        run: npm test

      - name: Install dependencies (App Server)
        working-directory: ./app-server
        run: npm install

      - name: Run tests (App Server)
        working-directory: ./app-server
        run: npm test

  build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Web Server image
        run: |
          ECR_REGISTRY=637423260681.dkr.ecr.us-east-1.amazonaws.com
          IMAGE_TAG=latest
          docker build -t $ECR_REGISTRY/web-server:$IMAGE_TAG ./web-server
          docker push $ECR_REGISTRY/web-server:$IMAGE_TAG

      - name: Build & Push App Server image
        run: |
          ECR_REGISTRY=637423260681.dkr.ecr.us-east-1.amazonaws.com
          IMAGE_TAG=latest
          docker build -t $ECR_REGISTRY/app-server:$IMAGE_TAG ./app-server
          docker push $ECR_REGISTRY/app-server:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: 
        - build-and-test
        - build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name test-cluster

      - name: Deploy to EKS
        run: |
          kubectl apply -f web-server/k8s/web-deployment.yaml
          kubectl apply -f web-server/k8s/web-service.yaml
          kubectl apply -f app-server/k8s/app-deployment.yaml
          kubectl apply -f app-server/k8s/app-service.yaml
