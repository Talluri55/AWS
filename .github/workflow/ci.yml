name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test-lint-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js (example — change if you use Python/Java/etc.)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Lint
      - name: Run lint
        run: npm run lint

      # Test
      - name: Run tests
        run: npm test

      # Build (optional — if you have a build step)
      - name: Build project
        run: npm run build

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag, and push the image to ECR
      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
